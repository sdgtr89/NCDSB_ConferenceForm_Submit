@model NCDSB_ConferenceForm_Submit.ViewModels.MileageFormVM

@{
    ViewBag.Title = "Create";
}
@Html.Partial("menu")

<head>
    @Styles.Render("~/Content/FormOrganization.css")
    <link href="~/Content/themes/base/jquery-ui.css"
          rel="stylesheet"
          type="text/css" />
</head>

<div class="row">
    <h1>Mileage Form</h1>
    <h2>Add Trip</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <input type="hidden" name="mileageFormID" value="@ViewBag.MileageFormID" />
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="container">
                <div class="col-sm-6">
                    <br />

            <div class="form-group">
                @Html.LabelFor(model => model.StartAddress, "Start Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Format: Site Name - Street Address, City" } })
                    @Html.ValidationMessageFor(model => model.StartAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndAddress, "End Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Format: Site Name - Street Address, City" } })
                    @Html.ValidationMessageFor(model => model.StartAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control", @placeholder = "Distance /km" } })
                    @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Calculate Distance" id="calcDis" class="btn btn-default" />
                </div>
            </div>
            <div id="map"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                <a class="btn btn-default" id="btnLeft" onclick="history.go(-1)">Back</a>
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
            </div>
                
            <input type="hidden" id="hfCustomer" name="CustomerId" />
            <input type="hidden" id="hfCustomer2" name="CustomerId2" />

            <div class="col-sm-6">
                <h3>Tips</h3>
                <div id="left-col">
                    <p>
                        <b>Note:</b> Adding a Trip will result in it being added to an accumulative total for your Mileage form on previous page. Trips need to be approved upon returning from your journey.
                    </p>
                    <br />
                    <p>
                        <b>Not Working?:</b> If your form wont submit you incorrectly put a value in or forgot to fill out a required input. This should be brought to your attention by red text.
                    </p>
                    <br />
                </div>
            </div>
            </div>
        </div>
    }

</div>
@section Scripts {

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLbnZlejIowWLpU4fyuwqIv0TD2F9ZGQE&callback=initMap"></script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/distanceCheck")
    @Scripts.Render("~/bundles/createMap")

    <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />
    <script type="text/javascript">
        $(function () {
            $("#StartAddress").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/MileageFormMaster/GetAddresses/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCustomer").val(i.item.val);
                },
                minLength: 1
            });
        });
        $(function () {
            $("#EndAddress").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/MileageFormMaster/GetAddresses/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCustomer2").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>

}
